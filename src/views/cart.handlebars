<div>
    {{#if user}}
    <div>
        <h2>Here we have your order {{user.firstName}}</h2>
    </div>
    <h2>{{this.cartName}}</h2>
    {{#each listOfProducts}}
    <div>
        <h3>Title: {{this.title}}</h3>
        <p>Description: {{this.description}}</p>
        <p>Images: {{this.thumbnail}}</p>
        <p>Price: {{this.price}}</p>
        <p>Status: {{this.status}}</p>
        <p>Code: {{this.code}}</p>
        <p>Stock: {{this.stock}}</p>
        <p>Category: {{this.category}}</p>
    </div>
    {{/each}}
    <div>
        <button id="confirmPurchase" >Confirm the Purchase</button>
    </div>
    <div>
        <div id="wallet_container"></div>           {{!-- Donde iria el boton de MercadoPago --}}
    </div>
        {{else}}
        <div>
            <h2>Your order is empty {{user.firstName}}</h2>
        </div>
    {{/if}}

</div>

<script src="/socket.io/socket.io.js" /></script>       {{!-- Los scripts comunican las view con el socket --}}
<script src="/src/dao/models/carts.model.js"></script>
<script src="https://sdk.mercadopago.com/js/v2"></script>           {{!-- SDK MercadoPago.js --}}
<script>
    const mp = new MercadoPago('TEST-b3f39045-107c-4aea-b5c1-4f1d81034a0d');

    //const socket = io();
    document.addEventListener('DOMContentLoaded',() => {
        const buttonToConfirmPurchase = document.querySelector('#confirmPurchase');
        buttonToConfirmPurchase.addEventListener("click", (button) => {
            const cid = "{{user.cart}}";
            console.log(cid);
                        fetch(`/api/cart/${cid}/purchase`,{
                method: 'POST',
                headers: {
                    'Content-Type':'application/json',
                }
            })

            .then(async (Response)=>{
                if(Response.status === 200){
                    // Response 
                    const responseID = await Response.json();

                    mp.bricks().create("wallet", "wallet_container", {
                    initialization: {
                        preferenceId: responseID.payload,
                    },
                    customization: {
                    texts: {
                        valueProp: 'smart_option',
                    },
                    },
                    })
                    alert('Purchase confirmed! â˜º');
                } else {
                    alert ('The purchase was not confirmed successfully')
                }
            })
            .catch((Error) => {
                console.error('Error in the antempt to confirm the purchase:', Error);
                alert('Error in the antempt to confirm the purchase')
            })
        })
    }) 

</script>
<script src="/js/index.js" /></script>