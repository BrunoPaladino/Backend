<div>
    <h1>Add a New Product to our Store</h1>

        <div id="formContainer">
        <fieldset>
            <legend>New Product</legend>
                <label for="productTitle">Product Title:</label>
                <input type="text" name="Product ID" placeholder="Product Title" id="productTitle" required>
                <br>
                <label for="productDescription">Product Description:</label>
                <input type="text" name="Product Description" placeholder="Product Description" id="productDescription" required>
                <br>
                <label for="productPrice">Product Price:</label>
                <input type="text" name="Product Price" placeholder="Product Price" id="productPrice" required>
                <br>
                <label for="productCode">Product Code:</label>
                <input type="text" name="Product Code" placeholder="Product Code" id="productCode" required>
                <br>
                    <div>
                        <button type="button" class="addProduct"> Add to Store </button>
                    </div>
        </fieldset>
    </div>


</div>


<script src="/socket.io/socket.io.js" /></script>       {{!-- Los scripts comunican las view con el socket --}}
<script src="/src/dao/models/carts.model.js"></script>
<script>
    //const socket = io();
    document.addEventListener('DOMContentLoaded',() => {
        const buttonToConfirmPurchase = document.querySelector('#confirmPurchase');
        buttonToConfirmPurchase.addEventListener("click", (button) => {
            const cid = "{{user.cart}}";
            console.log(cid);
                        fetch(`/api/cart/${cid}/purchase`,{
                method: 'POST',
                headers: {
                    'Content-Type':'application/json',
                }
            })
            .then((Response)=>{
                if(Response.status === 200){
                    alert('Purchase confirmed');
                } else {
                    alert ('The purchase was not confirmed successfully')
                }
            })
            .catch((Error) => {
                console.error('Error in the antempt to confirm the purchase:', error);
                alert('Error in the antempt to confirm the purchase')
            })
        })
    })

    //ADD PRODUCT LISTENER
    buttonAdd = document.querySelector(".addProduct");
    buttonAdd.addEventListener("click", addProduct);

    //ADD PRODUCT FUNCTION
    function addProduct(){
        let productIDToAdd = document.getElementById("productTitle").value;
        let productDescriptionToAdd = document.getElementById("productDescription").value;
        let productPriceToAdd = document.getElementById("productPrice").value;
        let productCodeToAdd = document.getElementById("productCode").value;

        const newProduct ={
            title: productIDToAdd,
            description: productDescriptionToAdd,
            price: productPriceToAdd,
            thumbnail :'toAdd',
            code : productCodeToAdd,
            status:'toAdd',
            stock: 10,
            category: 'toAdd',
        };

        socket.emit('addProductMongo', newProduct);
    };

/*
    //REMOVE PRODUCT LISTENER
    buttonRemove = document.querySelector(".removeProduct");
    buttonRemove.addEventListener("click", removeProduct);

    //REMOVE PRODUCT FUNCTION
    function removeProduct(){
        const productIDToRemove = document.getElementById("productIdRemove").value;
        socket.emit('removeProductMongo', productIDToRemove);
        console.log("Producto removido con ID:" , productIDToRemove);
    }*/
</script>
<script src="/js/index.js" /></script>